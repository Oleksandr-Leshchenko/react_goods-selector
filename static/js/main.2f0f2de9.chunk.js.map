{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","select","good","setState","prev","unselect","current","index","indexOf","splice","prettyString","strings","result","i","length","map","item","title","buttonSelector","element","includes","type","onClick","this","className","isValid","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAe,CACbC,MAAOH,EACPI,cAAe,I,EAGjBC,OAAS,SAACC,GACR,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBJ,cAAc,GAAD,mBAAMI,EAAKJ,eAAX,CAA0BE,S,EAI3CG,SAAW,SAACH,GACV,EAAKC,UAAS,SAAAG,GACZ,IAAMC,EAAQD,EAAQN,cAAcQ,QAAQN,GAQ5C,OANAI,EAAQN,cAAcS,OAAOF,EAAO,GAErB,CACbP,cAAeM,EAAQN,mB,EAO7BU,aAAe,SAACC,GAGd,IAFA,IAAMC,EAAS,GAENC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,GAAK,EACnCA,IAAMF,EAAQG,OAAS,EACzBF,EAAOC,GAAP,cAAmBF,EAAQE,IAClBA,IAAMF,EAAQG,OAAS,EAChCF,EAAOC,GAAP,UAAeF,EAAQE,GAAvB,KAEAD,EAAOC,GAAP,UAAeF,EAAQE,GAAvB,MAIJ,OAAOD,EAAOG,KAAI,SAAAC,GAAI,OAAK,+BAAkBA,GAAPA,O,EAGxCC,MAAQ,WACN,IAAQjB,EAAkB,EAAKF,MAAvBE,cAER,OAAQA,EAAcc,QACpB,KAAK,EACH,OACE,mDAEJ,KAAK,EACH,OACE,+BACGd,EACA,kBAGP,QACE,OACE,+BACG,EAAKU,aAAaV,GAClB,qB,EAMXkB,eAAiB,SAACC,GAGhB,OAF0B,EAAKrB,MAAvBE,cAGSoB,SAASD,GAYpB,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKjB,SAASc,IAHlB,oBAVA,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKrB,OAAOkB,IAHhB,kB,4CAsBR,WAAU,IAAD,OACP,EAAiCI,KAAKzB,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,sBAAKwB,UAAU,MAAf,UACGD,KAAKN,QACN,6BACGlB,EAAMgB,KAAI,SAACb,GACV,IAAMuB,EAAUzB,EAAcoB,SAASlB,GAEvC,OACE,qBAAesB,UAAWC,EAAU,eAAiB,GAArD,UACGvB,EACA,EAAKgB,eAAehB,KAFdA,e,GA1GLwB,IAAMC,WAsHT9B,ICxIf+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2f0f2de9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[];\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    selectedGoods: [],\n  };\n\n  select = (good: string) => {\n    this.setState(prev => ({\n      selectedGoods: [...prev.selectedGoods, good],\n    }));\n  };\n\n  unselect = (good: string) => {\n    this.setState(current => {\n      const index = current.selectedGoods.indexOf(good);\n\n      current.selectedGoods.splice(index, 1);\n\n      const result = {\n        selectedGoods: current.selectedGoods,\n      };\n\n      return result;\n    });\n  };\n\n  prettyString = (strings: string[]) => {\n    const result = [];\n\n    for (let i = 0; i < strings.length; i += 1) {\n      if (i === strings.length - 1) {\n        result[i] = `and ${strings[i]}`;\n      } else if (i === strings.length - 2) {\n        result[i] = `${strings[i]} `;\n      } else {\n        result[i] = `${strings[i]}, `;\n      }\n    }\n\n    return result.map(item => (<span key={item}>{item}</span>));\n  };\n\n  title = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return (\n          <h1>No goods selected</h1>\n        );\n      case 1:\n        return (\n          <h1>\n            {selectedGoods}\n            {' is selected'}\n          </h1>\n        );\n      default:\n        return (\n          <h1>\n            {this.prettyString(selectedGoods)}\n            {' are selected'}\n          </h1>\n        );\n    }\n  };\n\n  buttonSelector = (element: string) => {\n    const { selectedGoods } = this.state;\n\n    return (\n      !selectedGoods.includes(element)\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.select(element);\n            }}\n          >\n            Add\n          </button>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.unselect(element);\n            }}\n          >\n            remove\n          </button>\n        )\n    );\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        {this.title()}\n        <ul>\n          {goods.map((good: string) => {\n            const isValid = selectedGoods.includes(good);\n\n            return (\n              <li key={good} className={isValid ? 'selectedGood' : ''}>\n                {good}\n                {this.buttonSelector(good)}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}