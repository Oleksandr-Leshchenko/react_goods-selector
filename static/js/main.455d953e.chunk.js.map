{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","select","good","setState","prev","unselect","arr","index","findIndex","a","splice","this","prettyString","strings","result","i","length","map","item","className","title","element","isValid","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAe,CACbC,MAAOH,EACPI,cAAe,I,EAGjBC,OAAS,SAACC,GACR,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBJ,cAAc,GAAD,mBAAMI,EAAKJ,eAAX,CAA0BE,S,EAI3CG,SAAW,SAACH,GACV,EAAKC,UAAS,SAAAC,GACZ,IAAME,EAAMF,EAAKJ,cACXO,EAAQD,EAAIE,WAAU,SAAAC,GAAC,OAAIA,IAAMP,KAQvC,OANAI,EAAII,OAAOH,EAAO,GAEH,CACbP,cAAeM,O,4CAOrB,WAAU,IAAD,OACP,EAAiCK,KAAKb,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cACTY,EAAe,SAACC,GAGpB,IAFA,IAAMC,EAAS,GAENC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,GAAK,EACnCA,IAAMF,EAAQG,OAAS,EACzBF,EAAOC,GAAP,cAAmBF,EAAQE,IAClBA,IAAMF,EAAQG,OAAS,EAChCF,EAAOC,GAAP,UAAeF,EAAQE,GAAvB,KAEAD,EAAOC,GAAP,UAAeF,EAAQE,GAAvB,MAIJ,OAAOD,EAAOG,KAAI,SAAAC,GAAI,OAAK,+BAAkBA,GAAPA,OAoDxC,OACE,sBAAKC,UAAU,MAAf,UAlDY,WACZ,OAAQnB,EAAcgB,QACpB,KAAK,EACH,OACE,mDAEJ,KAAK,EACH,OACE,+BACGhB,EACA,kBAGP,QACE,OACE,+BACGY,EAAaZ,GACb,oBAkCNoB,GACD,6BACGrB,EAAMkB,KAAI,SAACf,GACV,IA/BgBmB,EA+BVC,EAAUtB,EAAcuB,SAASrB,GAEvC,OACE,qBAAeiB,UAAWG,EAAU,eAAiB,GAArD,UACGpB,GAnCWmB,EAoCInB,EAlCvBF,EAAcuB,SAASF,GAYpB,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKpB,SAASgB,IAHlB,oBAVA,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKxB,OAAOoB,IAHhB,oBA8BWnB,QAOdN,EAAgBoB,c,GA7GPU,IAAMC,WAmHT9B,ICrIf+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.455d953e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[];\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    selectedGoods: [],\n  };\n\n  select = (good: string) => {\n    this.setState(prev => ({\n      selectedGoods: [...prev.selectedGoods, good],\n    }));\n  };\n\n  unselect = (good: string) => {\n    this.setState(prev => {\n      const arr = prev.selectedGoods;\n      const index = arr.findIndex(a => a === good);\n\n      arr.splice(index, 1);\n\n      const result = {\n        selectedGoods: arr,\n      };\n\n      return result;\n    });\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n    const prettyString = (strings: string[]) => {\n      const result = [];\n\n      for (let i = 0; i < strings.length; i += 1) {\n        if (i === strings.length - 1) {\n          result[i] = `and ${strings[i]}`;\n        } else if (i === strings.length - 2) {\n          result[i] = `${strings[i]} `;\n        } else {\n          result[i] = `${strings[i]}, `;\n        }\n      }\n\n      return result.map(item => (<span key={item}>{item}</span>));\n    };\n\n    const title = () => {\n      switch (selectedGoods.length) {\n        case 0:\n          return (\n            <h1>No goods selected</h1>\n          );\n        case 1:\n          return (\n            <h1>\n              {selectedGoods}\n              {' is selected'}\n            </h1>\n          );\n        default:\n          return (\n            <h1>\n              {prettyString(selectedGoods)}\n              {' are selected'}\n            </h1>\n          );\n      }\n    };\n\n    const buttonSelector = (element: string) => {\n      return (\n        !selectedGoods.includes(element)\n          ? (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.select(element);\n              }}\n            >\n              Add\n            </button>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.unselect(element);\n              }}\n            >\n              remove\n            </button>\n          )\n      );\n    };\n\n    return (\n      <div className=\"App\">\n        {title()}\n        <ul>\n          {goods.map((good: string) => {\n            const isValid = selectedGoods.includes(good);\n\n            return (\n              <li key={good} className={isValid ? 'selectedGood' : ''}>\n                {good}\n                {buttonSelector(good)}\n              </li>\n            );\n          })}\n        </ul>\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}